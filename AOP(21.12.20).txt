REGEX  정규표현식
정규표현식에서 \을 나타내고 싶을 때는 \\로 표현해줘야 함
정규표현식에서 .을 나타내고 싶을 때는 ..로 표현해줘야 함

빈 이름이 충돌이 나면 안됨

빈 객체의 이름이 충돌이 났을 때 예외
org.springframework.beans.factory.BeanDefinitionStoreException
org.springframework.beans.factory.BeanDefinitionStoreException

빈 객체의 두 가지 방법
1. @Bean
2. @Component

callback method

다 사용하고 난 후 컨테이너를 꼭 닫아서 불필요한 메모리를 없애줘야 함

@Bean(initMethod="connect", destroyMethod="close")
initMethod -> 초기화에 관여할 메서드를 직접 지정
destroyMethod -> 소멸에 관여할 메서드를 직접 지정
특징 -> 인자를 전달해줄 수 없다 / 초기화, 소멸에 관여하는 메서드를 정의할 때 매개변수가 있으면 안됨

AOP 프로그래밍

AOP -> Aspect Oriented Programminn
- 핵심 기능과 공통 기능의 구현을 분리해 핵심 기능의 수정 없이 공통 기능을 적용할 수 있게 코드를 구성해야 함
- 핵심 기능에 공통 기능을 삽입하는 것
- 핵심 기능은 수정하지 않고 공통 기능만 추가하는 것

스프링 프레임워크가 제공하는 AOP를 사용하려면

spring-aop 모듈을 추가해야 함

spring-context 모듈을 추가하면 의존 전파에 의해서 spring-aop 모듈도 자동으로 디펜던시가 됨

재귀함수

Advice
- 공통 기능을 핵심 기능에 언제 적용할 지 정의할 때 사용하는 용어
- 언제, 공통 기능을 적용하겠다 라고 정의할 때 사용
- ex) 실행시간
Joinpoint
- Advice를 적용할 수 있는 지점을 의미
- 공통 기능들
Pointcut
- Joinpoint의 부분 집합으로서 실제 Advice가 적용되는 Joinpoint를 의미
- 공통 기능
Weaving
- Advice를 핵심 기능에 적용하는 것을 의미
Aspect
- 여러 객체에 공통으로 적용되는 기능
- 공통 기능 코드
- ex) 팩토리얼 계산

Around Advice

시그니처
오버로딩할 때는 달라야하고 오버라이딩할 때는 같아야 함
